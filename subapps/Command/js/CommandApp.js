/*!
 * AMI Web Framework
 *
 * Copyright (c) 2014-XXXX The AMI Team / LPSC / IN2P3
 *
 * This file must be used under the terms of the CeCILL-C:
 * http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.html
 * http://www.cecill.info/licences/Licence_CeCILL-C_V1-fr.html
 *
 * @global saveAs
 *
 */

/*--------------------------------------------------------------------------------------------------------------------*/
$AMIClass('CommandApp', {
  /*----------------------------------------------------------------------------------------------------------------*/
  $extends: ami.SubApp,

  /*----------------------------------------------------------------------------------------------------------------*/
  onReady: function onReady(userdata) {
    var _this = this;

    var result = $.Deferred();
    amiWebApp.loadResources(['subapps/Command/twig/CommandApp.twig', 'subapps/Command/twig/command.twig', 'subapps/Command/twig/result.twig', 'js/3rd-party/filesaver.min.js']).done(function (data) {
      amiWebApp.replaceHTML('#ami_main_content', data[0], {
        dict: {
          command: userdata
        }
      }).done(function () {
        _this.fragmentCommand = data[1];
        _this.fragmentResult = data[2];
        result.resolve();
      });
    }).fail(function (message) {
      result.reject(message);
    });
    return result;
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  onLogin: function onLogin() {
    return this.getCommands();
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  onLogout: function onLogout() {
    return this.getCommands();
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  getCommands: function getCommands() {
    var _this2 = this;

    var result = $.Deferred();
    amiCommand.execute('ListCommands').done(function (data) {
      var isAuthenticated = amiLogin.isAuthenticated();
      var rows = amiWebApp.jspath('..row', data);
      var dict = [];
      rows.forEach(function (row) {
        var command = amiWebApp.jspath('..field{.@name==="command"}.$', row)[0] || '';
        var visible = (amiWebApp.jspath('..field{.@name==="visible"}.$', row)[0] || 'true') !== 'false';
        var secured = (amiWebApp.jspath('..field{.@name==="secured"}.$', row)[0] || 'false') !== 'false';
        var help = amiWebApp.jspath('..field{.@name==="help"}.$', row)[0] || '';
        var usage = amiWebApp.jspath('..field{.@name==="usage"}.$', row)[0] || '';

        if (visible && isAuthenticated || amiLogin.hasRole('AMI_ADMIN') || command === 'GetSessionInfo' || command === 'ResetPassword' || command === 'AddUser') {
          var proto;

          if (!usage) {
            proto = command;
            help += '<br /><br />Usage:<br />' + command;
          } else {
            proto = command + ' ' + usage;
            help += '<br /><br />Usage:<br />' + command + ' ' + usage;
          }

          help = help.replace(new RegExp(command, 'g'), '<strong>' + command + '</strong>');
          dict.push({
            command: command,
            secured: secured,
            help: help,
            proto: proto
          });
        }
      });
      amiWebApp.replaceHTML('#D847C44B_D28F_49B3_AF79_7A68B3305ED2', _this2.fragmentCommand, {
        dict: dict
      }).done(function () {
        result.resolve();
      });
    }).fail(function (data, message) {
      result.reject(message);
    });
    return result;
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  execute: function execute(command, converter) {
    var _this3 = this;

    /*------------------------------------------------------------------------------------------------------------*/
    command = command.trim();
    converter = converter.trim();
    /*------------------------------------------------------------------------------------------------------------*/

    if (command) {
      amiWebApp.lock();
      amiCommand.execute(command, {
        converter: converter
      }).always(function (data, message, url) {
        var dict = {
          data: converter === 'AMIXmlToJson.xsl' ? JSON.stringify(data, undefined, 2) : data,
          url: url
        };
        amiWebApp.prependHTML('#AB4BA483_EE27_44D0_BB54_F5BFCFE4DA7E', _this3.fragmentResult, {
          dict: dict
        }).done(function () {
          amiWebApp.unlock();
        });
      });
    }
    /*------------------------------------------------------------------------------------------------------------*/

  },

  /*----------------------------------------------------------------------------------------------------------------*/
  select: function select(command) {
    $('#CE9A50CD_63CA_4A1E_B336_F45399BEC84D').val(command);
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  copy: function copy(text) {
    amiWebApp.createControl(null, this, 'textBox', [text], {});
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  save: function save(data) {
    /*------------------------------------------------------------------------------------------------------------*/
    var converter = $('#C8D10895_E8A7_46A0_B638_C8DDDED8F91C').val().trim();
    /*------------------------------------------------------------------------------------------------------------*/

    var fileMime;
    var fileName;
    /**/

    if (converter === 'AMIXmlToXml.xsl') {
      fileMime = 'application/xml';
      fileName = 'result.xml';
    } else if (converter === 'AMIXmlToJson.xsl') {
      fileMime = 'application/json';
      fileName = 'result.json';
    } else if (converter === 'AMIXmlToCsv.xsl') {
      fileMime = 'text/csv';
      fileName = 'result.csv';
    } else {
      fileMime = 'text/plain';
      fileName = 'result.txt';
    }
    /*------------------------------------------------------------------------------------------------------------*/


    saveAs(new Blob([amiWebApp.htmlToText(data)], {
      type: fileMime
    }), fileName);
    /*------------------------------------------------------------------------------------------------------------*/
  }
  /*----------------------------------------------------------------------------------------------------------------*/

});
/*--------------------------------------------------------------------------------------------------------------------*/

/* GLOBAL INSTANCE                                                                                                    */

/*--------------------------------------------------------------------------------------------------------------------*/

var commandApp = new CommandApp();
/*--------------------------------------------------------------------------------------------------------------------*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
