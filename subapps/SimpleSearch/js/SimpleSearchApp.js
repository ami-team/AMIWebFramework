/*!
 * AMI Web Framework
 *
 * Copyright (c) 2014-XXXX The AMI Team / LPSC / IN2P3
 *
 * This file must be used under the terms of the CeCILL-C:
 * http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.html
 * http://www.cecill.info/licences/Licence_CeCILL-C_V1-fr.html
 *
 */

/*--------------------------------------------------------------------------------------------------------------------*/
$AMIClass('SimpleSearchApp', {
  /*----------------------------------------------------------------------------------------------------------------*/
  $extends: ami.SubApp,

  /*----------------------------------------------------------------------------------------------------------------*/
  onReady: function onReady(userdata) {
    var _this = this;

    var result = $.Deferred();
    amiWebApp.loadResources(['subapps/SimpleSearch/twig/SimpleSearchApp.twig', 'subapps/SimpleSearch/twig/interface.twig', 'ctrl:simpleSearch', 'ctrl:tab']).done(function (data) {
      _this.searchCtor = data[2];
      _this.tabCtrl = new data[3]();
      amiWebApp.replaceHTML('#ami_main_content', data[0]).done(function () {
        _this.tabCtrl.render('#D76D32CB_F57C_B3DD_0C6C_6C45BFE15572', {
          card: false
        }).done(function () {
          /*------------------------------------------------------------------------------------------------*/
          _this.fragmentInterface = data[1];
          _this.searchInterfaces = {};
          /*------------------------------------------------------------------------------------------------*/

          _this.groups1 = [];
          _this.groups2 = [];

          if (userdata) {
            userdata.split(',').forEach(function (item) {
              var parts = item.split(':');
              /**/

              if (parts.length > 0) {
                var group = parts[0].trim();

                if (_this.groups1.indexOf(group) < 0) {
                  _this.groups1.push(group);
                }

                if (parts.length > 1) {
                  var name = parts[1].trim();

                  if (_this.groups2.indexOf(group + ':' + name) < 0) {
                    _this.groups2.push(group + ':' + name);
                  }
                }
              }
            });
          }
          /*------------------------------------------------------------------------------------------------*/


          result.resolve();
        });
      });
    }).fail(function (data) {
      result.reject(data);
    });
    return result;
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  onLogin: function onLogin() {
    this.getInterfaceList();
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  onLogout: function onLogout() {},

  /*----------------------------------------------------------------------------------------------------------------*/
  getInterfaceList: function getInterfaceList() {
    var _this2 = this;

    amiWebApp.lock();
    var sql = this.groups1.length === 0 ? 'SELECT `id`, `group`, `name`, `rank`, `json` FROM `router_search_interface` WHERE `archived` = 0 ORDER BY `rank` ASC, `group` ASC, `name` ASC' : 'SELECT `id`, `group`, `name`, `rank`, `json` FROM `router_search_interface` WHERE `archived` = 0 AND `group` IN (' + this.groups1.map(function (group) {
      return '\'' + amiWebApp.textToSQL(group) + '\'';
    }).join(', ') + ') ORDER BY `rank` ASC, `group` ASC, `name` ASC';
    amiCommand.execute('SearchQuery -catalog="self" -entity="router_search_interface" -sql="' + sql + '"').done(function (data) {
      var rows = amiWebApp.jspath('..row', data);
      var dict = {
        groups: {}
      };
      var auto_open = [];
      rows.forEach(function (row) {
        var id = amiWebApp.jspath('..field{.@name==="id"}.$', row)[0] || '';
        var group = amiWebApp.jspath('..field{.@name==="group"}.$', row)[0] || '';
        var name = amiWebApp.jspath('..field{.@name==="name"}.$', row)[0] || '';
        var json = amiWebApp.jspath('..field{.@name==="json"}.$', row)[0] || '';

        try {
          if (!(group in dict.groups)) {
            dict.groups[group] = [];
          }

          var searchInterface = {
            id: id,
            name: name,
            json: JSON.parse(json)
          };
          dict.groups[group].push(searchInterface);
          _this2.searchInterfaces[id] = searchInterface;

          if (_this2.groups2.indexOf(group + ':' + name) >= 0) {
            auto_open.push(id);
          }
        } catch (e) {
          /* IGNORE */
        }
      });
      amiWebApp.replaceHTML('#DF5986EA_9773_14A1_DA62_82F21B5062CB', _this2.fragmentInterface, {
        dict: dict
      }).done(function () {
        auto_open.forEach(function (item) {
          _this2.select(item);
        });
        amiWebApp.unlock();
      });
    }).fail(function (data, message) {
      amiWebApp.error(message, true);
    });
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  select: function select(id) {
    var _this3 = this;

    amiWebApp.lock();
    var searchInterface = this.searchInterfaces[id];
    this.tabCtrl.appendItem(searchInterface.name, {
      context: this,
      closable: true
    }).done(function (sel) {
      searchInterface.json.name = searchInterface.name;
      new _this3.searchCtor(_this3.tabCtrl).render(sel, searchInterface.json).always(function () {
        amiWebApp.unlock();
      });
    });
  }
  /*----------------------------------------------------------------------------------------------------------------*/

});
/*--------------------------------------------------------------------------------------------------------------------*/

/* GLOBAL INSTANCE                                                                                                    */

/*--------------------------------------------------------------------------------------------------------------------*/

var simpleSearchApp = new SimpleSearchApp();
/*--------------------------------------------------------------------------------------------------------------------*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
