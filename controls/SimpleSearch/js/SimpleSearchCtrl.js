/*!
 * AMI Web Framework
 *
 * Copyright (c) 2014-XXXX The AMI Team / LPSC / IN2P3
 *
 * This file must be used under the terms of the CeCILL-C:
 * http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.html
 * http://www.cecill.info/licences/Licence_CeCILL-C_V1-fr.html
 *
 */

/*--------------------------------------------------------------------------------------------------------------------*/
$AMIClass('SimpleSearchCtrl', {
  /*----------------------------------------------------------------------------------------------------------------*/
  $extends: ami.Control,

  /*----------------------------------------------------------------------------------------------------------------*/
  $init: function $init(parent, owner) {
    this.$super.$init(parent, owner);
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  onReady: function onReady() {
    return amiWebApp.loadResources([amiWebApp.originURL + '/controls/SimpleSearch/twig/SimpleSearchCtrl.twig', 'ctrl:tab'], {
      context: this
    }).done(function (data) {
      this.fragmentSimpleSearch = data[0];
      this.tabCtrl = data[1];
    });
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  render: function render(selector, settings) {
    var result = $.Deferred();
    /*------------------------------------------------------------------------------------------------------------*/

    var fn = function fn(catalog, entity, fields, value) {
      var select = fields.length === 0 ? ['0 = 1'] : value.indexOf('%') < 0 ? fields.map(function (field) {
        return field + ' = \'' + amiWebApp.textToSQL(value) + '\'';
      }) : fields.map(function (field) {
        return field + ' LIKE \'' + amiWebApp.textToSQL(value) + '\'';
      });
      return 'BrowseQuery' + ' -catalog="' + amiWebApp.textToString(catalog) + '" -entity="' + amiWebApp.textToString(entity) + '" -mql="SELECT * WHERE ' + select.join(' OR ') + '"';
    };
    /*------------------------------------------------------------------------------------------------------------*/


    var _amiWebApp$setup = amiWebApp.setup(['context', 'placeholder', 'catalog', 'defaultCatalog', 'entity', 'defaultEntity', 'fields', 'criterias', 'searchCommandFunc', 'card'], [result, '', '', '', '', '', [], [], fn, false], settings),
        context = _amiWebApp$setup[0],
        placeholder = _amiWebApp$setup[1],
        catalog = _amiWebApp$setup[2],
        defaultCatalog = _amiWebApp$setup[3],
        entity = _amiWebApp$setup[4],
        defaultEntity = _amiWebApp$setup[5],
        fields = _amiWebApp$setup[6],
        criterias = _amiWebApp$setup[7],
        searchCommandFunc = _amiWebApp$setup[8],
        card = _amiWebApp$setup[9];
    /*------------------------------------------------------------------------------------------------------------*/


    this.ctx = {};

    for (var key in settings) {
      this.ctx[key] = settings[key];
    }
    /*------------------------------------------------------------------------------------------------------------*/


    this.ctx.isEmbedded = amiWebApp.isEmbedded();
    this.ctx.endpoint = amiCommand.endpoint;
    this.ctx.context = context;
    this.ctx.placeholder = placeholder;
    this.ctx.catalog = defaultCatalog ? defaultCatalog : catalog;
    this.ctx.entity = defaultEntity ? defaultEntity : entity;
    this.ctx.fields = criterias.length > 0 ? criterias.filter(function (criteria) {
      return criteria.more.simple_search;
    }).map(function (criteria) {
      return '`' + criteria.catalog + '`.`' + criteria.entity + '`.`' + criteria.field + '`';
    }) : fields;
    this.ctx.searchCommandFunc = searchCommandFunc;
    this.ctx.card = card;
    /*------------------------------------------------------------------------------------------------------------*/

    this._render(result, selector);
    /*------------------------------------------------------------------------------------------------------------*/


    return result;
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  _render: function _render(result, selector) {
    var _this = this;

    if (this.getParent().$name !== 'TabCtrl') {
      var tab = new this.tabCtrl(null, this);
      tab.render(selector, this.ctx).done(function () {
        tab.appendItem('<i class="fa fa-search"></i> ' + _this.ctx.entity, {
          closable: false,
          firstVisible: false
        }).done(function (selector) {
          _this.setParent(tab);

          _this.__render(result, selector);
        });
      });
    } else {
      this.__render(result, selector);
    }
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  __render: function __render(result, selector) {
    var _this2 = this;

    this.replaceHTML(selector, this.fragmentSimpleSearch, {
      dict: this.ctx
    }).done(function () {
      /*--------------------------------------------------------------------------------------------------------*/
      $(_this2.patchId('#E8F152B0_66C6_132C_0155_955D36654C13')).submit(function (e) {
        e.preventDefault();
        var value = $(_this2.patchId('#F8D8C2FB_81D9_F7A0_121B_6FB2949F8DB6')).val().trim();

        if (value) {
          _this2.search(value);
        }
      });
      /*--------------------------------------------------------------------------------------------------------*/

      result.resolveWith(_this2.ctx.context);
      /*--------------------------------------------------------------------------------------------------------*/
    });
  },

  /*----------------------------------------------------------------------------------------------------------------*/
  search: function search(value) {
    return amiWebApp.createControlInContainer(this.getParent(), this, 'table', [this.ctx.searchCommandFunc(this.ctx.catalog, this.ctx.entity, this.ctx.fields, value)], {}, this.ctx, 'table', this.ctx.entity);
  }
  /*----------------------------------------------------------------------------------------------------------------*/

});
/*--------------------------------------------------------------------------------------------------------------------*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
